apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: mlapp-secure
spec:
  params:
    - default: object-detection-rest
      name: APP_NAME
      type: string
    - default: 'https://github.com/jstakun/object-detection-rest.git'
      name: GIT_REPO
      type: string
    - default: master
      name: GIT_REVISION
      type: string
    - default: object-detection-rest
      name: IMAGE_NAME
      type: string
    - default: .
      name: PATH_CONTEXT
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
    - name: deploy
      params:
        - name: SCRIPT
          value: >-
            oc rollout restart deploy/$(params.APP_NAME);oc rollout status
            deploy/$(params.APP_NAME) -w
      runAfter:
        - acs-image-scan
        - acs-image-check
        - sign-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: sca-dependency-analysis
      params:
        - name: manifest-file-path
          value: requirements.txt
        - name: output-file-path
          value: redhat-codeready-dependency-analysis-report.json
        - name: pkg-installation-directory-path
          value: site-package
        - name: image
          value: 'quay.io/jstakun/crda-python:3.8'
      runAfter:
        - copy-dependencies
      taskRef:
        kind: Task
        name: redhat-codeready-dependency-analysis
      workspaces:
        - name: output
          workspace: workspace
    - name: acs-image-scan
      params:
        - name: rox_central_endpoint
          value: roxsecrets
        - name: rox_api_token
          value: roxsecrets
        - name: image
          value: >-
            quay.io/jstakun/$(params.IMAGE_NAME)@$(tasks.build-image.results.IMAGE_DIGEST)
        - name: output_format
          value: table
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - copy-image
      taskRef:
        kind: Task
        name: stackrox-image-scan
    - name: acs-image-check
      params:
        - name: rox_central_endpoint
          value: roxsecrets
        - name: rox_api_token
          value: roxsecrets
        - name: image
          value: >-
            quay.io/jstakun/$(params.IMAGE_NAME)@$(tasks.build-image.results.IMAGE_DIGEST)
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - copy-image
      taskRef:
        kind: Task
        name: stackrox-image-check
    - name: copy-dependencies
      params:
        - name: file_url
          value: 'file://requirements.txt'
        - name: manifest-file-path
          value: requirements.txt
        - name: pkg-installation-directory-path
          value: site-package
        - name: image
          value: 'quay.io/jstakun/crda-python:3.8'
        - name: type
          value: python
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: pre-task-setup
      workspaces:
        - name: output
          workspace: workspace
    - name: copy-image
      params:
        - name: srcImageURL
          value: >-
            docker://image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/$(params.IMAGE_NAME)@$(tasks.build-image.results.IMAGE_DIGEST)
        - name: destImageURL
          value: 'docker://quay.io/jstakun/$(params.IMAGE_NAME)'
        - name: srcTLSverify
          value: 'false'
        - name: destTLSverify
          value: 'true'
      runAfter:
        - build-image
      taskRef:
        kind: ClusterTask
        name: skopeo-copy
      workspaces:
        - name: images-url
          workspace: workspace
    - name: sign-image
      params:
        - name: cosignkey
          value: signing-secrets
        - name: image
          value: quay.io/jstakun/$(params.IMAGE_NAME)@$(tasks.build-image.results.IMAGE_DIGEST)
        - name: namespace
          value: $(context.pipelineRun.namespace)
      runAfter:
        - copy-image
      taskRef:
        kind: Task
        name: cosign
      workspaces:
        - name: source
          workspace: workspace
    - name: build-image
      params:
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/$(params.IMAGE_NAME)
        - name: BUILDER_IMAGE
          value: >-
            registry.redhat.io/rhel8/buildah@sha256:23fb7971ea6ac4aaaaa1139473a602df0df19222a3b5a76b551b2b9ddd92e927
        - name: STORAGE_DRIVER
          value: vfs
        - name: DOCKERFILE
          value: ./Containerfile
        - name: CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'true'
        - name: FORMAT
          value: oci
        - name: BUILD_EXTRA_ARGS
          value: >-
            --squash      
            --build-arg
            PIP_INDEX_URL=http://nexus.apps-infra.svc:8081/repository/pypi-proxy/simple/
            --build-arg PIP_TRUSTED_HOST=nexus.apps-infra.svc
      runAfter:
        - sca-dependency-analysis
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: workspace
  workspaces:
    - name: workspace
